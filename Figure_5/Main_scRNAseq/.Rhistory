library(Seurat)
library(tidyverse)
load("/Users/magalhae/Desktop/TFsubopt/Figure_5/Main_scRNAseq/28.02.2022_scRNAseq.RData")
myfeatures <- c("FCGR2A", "FCGR2B", "FCGR3A","FCGR3B", "HSPA6", "CEACAM1", "CEACAM16-AS1", "CEACAM19", "CEACAM21", "CEACAM3", "CEACAM4", "CEACAM5", "CEACAM6", "CEACAM8")
FeaturePlot(alldataF, reduction = "umap", dims = 1:2, features = myfeatures, ncol = 3, order = T,  slot = "scale.data") & theme(aspect.ratio = 1)
#ggsave("Featuresplot_FCGR2B_CD66_on_umap.pdf")
FeaturePlot("FCGR2A", reduction = "umap", dims = 1:2, features = myfeatures, ncol = 3, order = T,  slot = "scale.data") & theme(aspect.ratio = 1)
FeaturePlot(alldataF, reduction = "umap", dims = 1:2, features = "FCGR2A", ncol = 3, order = T,  slot = "scale.data") & theme(aspect.ratio = 1)
heat
load("/Users/magalhae/.COVolumes/_Hnisz seq data/project/hnisz_seq_data/scRNAseq/Project_AM/10-11-2021_JuliansScRNAseq_NewRef/
")"
""
load("/Users/magalhae/.COVolumes/_Hnisz seq data/project/hnisz_seq_data/scRNAseq/Project_AM/10-11-2021_JuliansScRNAseq_NewRef/")
View(HExp_sc)
h
DoHeatmap(alldataF, features = Unique_C7, group.by = "RNA_snn_res.0.5",
assay = "RNA") + theme(axis.text = element_text(size = 8))
VlnPlot(IS15WT_All, features = Unique_C7,
ncol =6, group.by = "RNA_snn_res.0.5",split.by = "type", assay = "RNA", pt.size = -1, cols = typecol) &
theme(axis.title.x = element_blank(), axis.title.y = element_text(size = 6) , axis.text.x = element_text(size = 6), text = element_text(size = 20),plot.title = element_text(size = 6), axis.text.y = element_text(size = 6),  aspect.ratio = 1)
#Select cluster 7
IS15WT_All <- SetIdent(alldataF, value = "type")
IS15WT_All <- subset(IS15WT_All,  idents = c("AroPerfect_IS15", "WT"))
IS15WT_All <- SetIdent(IS15WT_All, value = "RNA_snn_res.0.5")
genes.to.label = sort(c("HLA-B", "HLA-A", "SMAP2", "IL2RA", "MMP9", "PDCD4", "SAT1", "HLA-E", "HLA-DRB1", "HLA-C", "CSF3R", "S100A4", "PLCG2", "CFD", "CTSD", "GLIPR1", "LBVRB", "GPX4", "FXYD5"))
VlnPlot(IS15WT_All, genes.to.label, stack = TRUE, sort = F, flip = T, split.by = "type", raster = F) +
theme(text = element_text(size = 6), axis.text = element_text(size = 6))
genes.to.label = sort(c("HLA-B", "HLA-A", "SMAP2", "IL2RA", "MMP9", "PDCD4", "SAT1", "HLA-E", "HLA-DRB1", "HLA-C", "CSF3R", "S100A4", "PLCG2", "CFD", "CTSD", "GLIPR1", "LBVRB", "GPX4", "FXYD5"))
VlnPlot(IS15WT_All, genes.to.label, stack = TRUE, sort = F, flip = T, split.by = "type", raster = F) +
theme(text = element_text(size = 6), axis.text = element_text(size = 6))
VlnPlot(IS15WT_All, features = Unique_C7,
ncol =6, group.by = "RNA_snn_res.0.5",split.by = "type", assay = "RNA", pt.size = -1, cols = typecol) &
theme(axis.title.x = element_blank(), axis.title.y = element_text(size = 6) , axis.text.x = element_text(size = 6), text = element_text(size = 20),plot.title = element_text(size = 6), axis.text.y = element_text(size = 6),  aspect.ratio = 1)
DoHeatmap(alldataF, features = Unique_C7, group.by = "RNA_snn_res.0.5",
assay = "RNA") + theme(axis.text = element_text(size = 8))
genesexpressed7 <- as.data.frame(AverageExpression(object = IS15WT_7))
#Select cluster 7
IS15WT_7 <- SetIdent(alldataF, value = "RNA_snn_res.0.5")
IS15WT_7 <- subset(IS15WT_7,  idents = 7)
IS15WT_7 <- SetIdent(IS15WT_7, value = "type")
IS15WT_7 <- subset(IS15WT_7,  idents = c("AroPerfect_IS15", "WT"))
#Expressed genes per cluster
# three clusters
table(alldataF$RNA_snn_res.0.5)
cluster.set <- unique(alldataF$RNA_snn_res.0.5)
# overall nFeature
sum(rowSums(alldataF[['RNA']]@counts) > 5)
# nFeature for each cluster
sapply(X = cluster.set, function(c) {
cells.c <- WhichCells(object = alldataF, expression = RNA_snn_res.0.5 == c)
nFeature.c <- sum(rowSums(alldataF[['RNA']]@counts[, cells.c ]) > 5)
return(nFeature.c)
}
)
genesexpressed7 <- as.data.frame(AverageExpression(object = IS15WT_7))
genesexpressed7 <- genesexpressed7 %>% rownames_to_column('gene') %>% rowwise() %>% mutate(rs = sum(c(RNA.WT, RNA.AroPerfect_IS15)))
View(HExp_sc)
DimPlot(alldataF, label = T, group.by = "RNA_snn_res.0.5", reduction = "umap", pt.size = 0.1, cols = clustercols) + theme(aspect.ratio = 1)
saveRDS(alldataF, "Main_seuratObject.rds")
WT <- table(paste0(alldata@meta.data$RNA_snn_res.0.5, alldata@meta.data$`CEBPa-WT`))
IS10 <- table(paste0(alldata@meta.data$RNA_snn_res.0.5, alldata@meta.data$`CEBPa-AroPERFECT-IS10`))
IS15 <- table(paste0(alldata@meta.data$RNA_snn_res.0.5, alldata@meta.data$`CEBPa-AroPERFECT-IS15`))
Mkp2 <- rbind(WT,IS10,IS15)
Mkp2 <- as.data.frame(Mkp2)
meta.data <- alldata[[]]
countsWT <- group_by(meta.data, `CEBPa-WT`, RNA_snn_res.0.5) %>% summarise(count = n())
countsIS10 <- group_by(meta.data, `CEBPa-AroPERFECT-IS10`, RNA_snn_res.0.5) %>% summarise(count = n())
countsIS15 <- group_by(meta.data, `CEBPa-AroPERFECT-IS15`, RNA_snn_res.0.5) %>% summarise(count = n())
countsall <- group_by(meta.data, type, RNA_snn_res.0.5) %>% summarise(count = n())
write.csv(countsall, "Cells_markers_PosNeg_perCluster.csv")
g1 <- ggplot(countsWT, aes(RNA_snn_res.0.5, count, fill = `CEBPa-WT`)) +
geom_bar(position="fill", stat = 'identity') + ggtitle("CEBPa-WT") + labs(fill = "") + theme_bw()+ scale_fill_manual(values = c("#3b518b","#5cc763"))
g2 <- ggplot(countsIS10, aes(RNA_snn_res.0.5, count, fill = `CEBPa-AroPERFECT-IS10`)) +
geom_bar(position="fill", stat = 'identity') + ggtitle("CEBPa-AroPERFECT-IS10") + labs(fill = "") + theme_bw()+ scale_fill_manual(values = c("#3b518b","#5cc763"))
g3 <- ggplot(countsIS15, aes(RNA_snn_res.0.5, count, fill = `CEBPa-AroPERFECT-IS15`)) +
geom_bar(position="fill", stat = 'identity') + ggtitle("CEBPa-AroPERFECT-IS15")  + labs(fill = "") + theme_bw() + scale_fill_manual(values = c("#3b518b","#5cc763"))
plot_grid(ncol = 3, g1, g2, g3)
g1
g2
g3
geobcols <- c("#ef4448", "#d57128", "#3e2d80")
ggplot(countsall, aes(RNA_snn_res.0.5, count, fill = type)) +
geom_bar(position="fill", stat = 'identity') +
labs(fill = "") + theme_bw() + scale_fill_manual(values = geobcols)
#ggsave("clustreeRNA_snn_res_barplot_Type.pdf")
geobcols <- c("#ef4448", "#d57128", "#3e2d80")
ggplot(countsall, aes(RNA_snn_res.0.5, count, fill = type)) +
geom_bar(position="fill", stat = 'identity') +
labs(fill = "") + theme_bw() + scale_fill_manual(values = geobcols)
#ggsave("clustreeRNA_snn_res_barplot_Type.pdf")
hp<- Heatmap(exp_mat,
heatmap_legend_param=list(title="expression"),
column_title = "clustered dotplot",
col=col_fun,
rect_gp = gpar(type = "none"),
layer_fun = layer_fun,
row_names_gp = gpar(fontsize = 5),
split = cluster_anno,
border = "black",
width = unit(20, "cm") , height = unit(6, "cm"),
column_order = order_genes,
row_order = c("3", "4", "1", "6", "5", "7")
#row_annotation = column_ha
)
library(viridis)
library(Polychrome)
Polychrome::swatch(inferno(20, direction = -1))
quantile(exp_mat, c(0.1, 0.5, 0.9, 0.99))
## any value that is greater than 2 will be mapped to yellow
col_fun = circlize::colorRamp2(c(-1, 0, 2), viridis(20, direction = -1)[c(1,10, 20)])
cell_fun = function(j, i, x, y, w, h, fill){
grid.rect(x = x, y = y, width = w, height = h,
gp = gpar(col = NA, fill = NA))
grid.circle(x=x,y=y,r= percent_mat[i, j]/100 * min(unit.c(w, h)),
gp = gpar(fill = col_fun(exp_mat[i, j]), col = NA))}
order_genes <- c("H2BC7", "H2AC14", "H1-5", "H3C2", "H2AC11", "H3C4", "H3C3", "H2AC16", "MAD2L1", "H2AC20", "MT1X", "BLNK", "AFF3", "LCN6", "PRKCZ", "OFD1", "VPREB3", "IRAG2", "STK39", "BLK", "SRM", "NME1", "IL7R", "IRX1", "UGT3A2", "RAG1", "CD79A", "DANCR", "ELK3", "SPATS2L", "TSPOAP1", "TNFAIP8", "PLEK", "CCDC26", "RGS18", "ATP8B4", "ANKRD28", "P4HB", "HERC5", "SIPA1L2", "ANXA1", "APLP2", "SRGN", "CFD", "MNDA", "SERPINB1", "LYZ", "AIF1", "S100A11", "HCST", "S100A8", "S100A9", "CYBB", "ITGB2", "NCF1", "LST1", "PIM1", "PTPRC", "FCER1G")
## To make the size of the dot in the heatmap body comparable to the legend, I used fixed
## size unit.(2, "mm) rather than min(unit.c(w, h).
cluster_anno<-  c("Early-inter", "Inicial B-cell", "Early", "Inter/late", "Inter-late", "Late Macrophage")
column_ha<- HeatmapAnnotation(
cluster_anno = cluster_anno,
col = list(cluster_anno = setNames(brewer.pal(6, "Paired"), unique(cluster_anno))
),
na_col = "grey"
)
library(Seurat)
library(cowplot)
library(hdf5r)
hp<- Heatmap(exp_mat,
heatmap_legend_param=list(title="expression"),
column_title = "clustered dotplot",
col=col_fun,
rect_gp = gpar(type = "none"),
layer_fun = layer_fun,
row_names_gp = gpar(fontsize = 5),
split = cluster_anno,
border = "black",
width = unit(20, "cm") , height = unit(6, "cm"),
column_order = order_genes,
row_order = c("3", "4", "1", "6", "5", "7")
#row_annotation = column_ha
)
install_github("jokergoo/ComplexHeatmap")
BiocManager::install("ComplexHeatmap")
BiocManager::install("ComplexHeatmap")
BiocManager::install("ComplexHeatmap", force = T)
library(ComplexHeatmap)
BiocManager::install("InteractiveComplexHeatmap", force = T)
hp<- Heatmap(exp_mat,
heatmap_legend_param=list(title="expression"),
column_title = "clustered dotplot",
col=col_fun,
rect_gp = gpar(type = "none"),
layer_fun = layer_fun,
row_names_gp = gpar(fontsize = 5),
split = cluster_anno,
border = "black",
width = unit(20, "cm") , height = unit(6, "cm"),
column_order = order_genes,
row_order = c("3", "4", "1", "6", "5", "7")
#row_annotation = column_ha
)
df<- p$data
exp_mat<-df %>%
select(-pct.exp, -avg.exp) %>%
pivot_wider(names_from = id, values_from = avg.exp.scaled) %>%
as.data.frame()
